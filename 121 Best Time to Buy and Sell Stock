Approach #1 Brute Force

class Solution {
    public int maxProfit(int[] prices) {
        int max = 0;
        
        for(int i = 0; i < prices.length; i++){
            for(int j = i + 1; j < prices.length; j++){
                if(prices[j] > prices[i]){
                    max = Math.max(max, prices[j] - prices[i]);
                }
            }
        }
        return max;
    }
}


Approach #2

class Solution {
    public int maxProfit(int[] prices) {
        int max = 0;
        int minp = Integer.MAX_VALUE;    
        for(int i = 0; i < prices.length; i++){
            if(prices[i] < minp) minp = prices[i];
            else if (prices[i] - minp > max){
                max = prices[i] - minp;
            }
        }
        return max;
    }
}


Approach #3
class Solution {
public int maxProfit(int[] prices) {
    if(prices.length<=1) return 0;
    int buy=Integer.MAX_VALUE;
    int sell=0;
    
    for(int i=0;i<prices.length;i++){    
        buy=Math.min(buy,prices[i]);
        sell=Math.max(sell,prices[i]-buy);
    }
    return sell;
}
}
