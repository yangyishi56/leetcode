class Solution {
    public boolean isValidSudoku(char[][] board) {
        //initialize hashmap for columns, rows and boxes
        Map<Integer, Integer>[] columns = new Map[9];
        Map<Integer, Integer>[] rows = new Map[9];
        Map<Integer, Integer>[] boxes = new Map[9];
        for(int i = 0; i < 9; i++){
            rows[i] = new HashMap<Integer, Integer>();
            columns[i] = new HashMap<Integer, Integer>();
            boxes[i] = new HashMap<Integer, Integer>();
        }
        
        //validate a board
        for(int i = 0; i < 9; i++){
            for(int j = 0; j < 9; j++){
                char num = board[i][j];
                if(num != '.'){
                    int n = (int)num;
                    int box_index = (i / 3)*3 + j/3;
                    
                    //keep the current cell value
                    rows[i].put(n, rows[i].getOrDefault(n, 0) + 1);
                    columns[j].put(n, columns[j].getOrDefault(n, 0) + 1);
                    boxes[box_index].put(n, boxes[box_index].getOrDefault(n, 0) + 1);
                    
                    //check if this value has been already stored
                    if(rows[i].get(n) > 1 || columns[j].get(n) > 1 || boxes[box_index].get(n) > 1)
                        return false;
                }
            }
        }
        
        return true;
    }
}
