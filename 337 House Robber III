/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int rob(TreeNode root) {
        int[] result =  helper(root);
        return Math.max(result[0], result[1]);
    }
    
    public int[] helper(TreeNode root){
        int[] ans = new int[2];
        if(root == null) return ans;
        //Call recursion:
        int[] left = helper(root.left);
        int[] right = helper(root.right);
        //ans[0] if current node is not robbed
        //ans[1] if current node is robbed
        ans[0] = Math.max(left[0], left[1]) + Math.max(right[0], right[1]);
        ans[1] = root.val + left[0] + right[0];
        return ans;
        
    }
}
